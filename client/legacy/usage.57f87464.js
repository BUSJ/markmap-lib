import{a,b as n,d as e,e as t,n as r,s as o,g as i,S as s,B as m,p as l,q as p,r as d,v as c,w as u,x as h,i as g,j as f,z as k}from"./client.c25d167e.js";import{l as b}from"./markmap.83e85987.js";import"./defineProperty.b786bad4.js";function v(a){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(a){return!1}}();return function(){var r,o=n(a);if(t){var i=n(this).constructor;r=Reflect.construct(o,arguments,i)}else r=o.apply(this,arguments);return e(this,r)}}function w(a){var n;return{c:function(){n=m("main")},l:function(a){n=l(a,"MAIN",{}),p(n).forEach(d)},m:function(e,t){c(e,n,t),n.innerHTML='<h1 id="usage">Usage</h1>\n<p><img src="https://img.shields.io/npm/v/markmap-lib.svg" alt="NPM">\n<img src="https://img.shields.io/npm/l/markmap-lib.svg" alt="License">\n<img src="https://img.shields.io/npm/dt/markmap-lib.svg" alt="Downloads"></p>\n<h2 id="command-line">Command-line</h2>\n<h3 id="installation">Installation</h3>\n<p>Install globally:</p>\n<pre><code class="language-bash">$ yarn global add markmap-lib\n# or\n$ npm install markmap-lib -g</code></pre>\n<p>or use with <code>npx</code>:</p>\n<pre><code class="language-bash">$ npx markmap-lib</code></pre>\n<h3 id="commands">Commands</h3>\n<pre><code>Usage: markmap [options] &lt;input&gt;\n\nCreate a markmap from a Markdown input file\n\nOptions:\n  -V, --version          output the version number\n  -o, --output &lt;output&gt;  specify filename of the output HTML\n  --enable-mathjax       enable MathJax support\n  --enable-prism         enable PrismJS support\n  --no-open              do not open the output file after generation\n  -h, --help             display help for command</code></pre><p>Suppose we have a Markdown file named <code>note.md</code>.</p>\n<p>Run the following command to get an interactive mindmap:</p>\n<pre><code class="language-bash">$ markmap note.md\n\n# without global installation\n$ npx markmap-lib note.md</code></pre>\n<p>Then we get <code>note.html</code> in the same directory, and hopefully it will be open in your default browser.</p>\n<h2 id="api">API</h2>\n<h3 id="installation-1">Installation</h3>\n<pre><code class="language-bash">$ yarn add markmap-lib\n# or\n$ npm install markmap-lib</code></pre>\n<h3 id="transform">Transform</h3>\n<p>Transform Markdown to markmap data:</p>\n<pre><code class="language-js">import { transform } from &#39;markmap-lib/dist/transform&#39;;\n\nconst data = transform(markdown);</code></pre>\n<p>Now we get the data for rendering in <code>data</code>.</p>\n<h3 id="render">Render</h3>\n<p>Render a markmap from transformed data:</p>\n<p>Create an SVG element with explicit width and height:</p>\n<pre><code class="language-html">&lt;svg id=&quot;markmap&quot; style=&quot;width: 800px; height: 800px&quot;&gt;&lt;/svg&gt;</code></pre>\n<p>Render a markmap to the SVG element:</p>\n<pre><code class="language-js">import { markmap } from &#39;markmap-lib/dist/view&#39;;\n\nmarkmap(&#39;#markmap&#39;, data);\n\n// or pass an SVG element directly\nconst svgEl = document.querySelector(&#39;#markmap&#39;);\nmarkmap(svgEl, data);</code></pre>\n<h2 id="plugins">Plugins</h2>\n<ul>\n<li>MathJax</li>\n<li>PrismJS</li>\n</ul>\n<h3 id="command-line-1">Command-line</h3>\n<p>To enable plugins in command line, just add the related option, for example:</p>\n<pre><code class="language-bash">$ markmap note.md --enable-mathjax --enable-prism</code></pre>\n<h3 id="api-1">API</h3>\n<p><code>loadPlugins</code> loads necessary CSS and JavaScript files.</p>\n<pre><code class="language-js">import { markmap, loadPlugins } from &#39;markmap-lib/dist/view&#39;;\n\nloadPlugins([\n  &#39;mathJax&#39;,\n  &#39;prism&#39;,\n])\n.then(() =&gt; {\n  markmap(&#39;#markmap&#39;, data);\n});</code></pre>\n<h2 id="related">Related</h2>\n<ul>\n<li>Use with Vim / Neovim: <a href="https://github.com/gera2ld/coc-markmap">coc-markmap</a></li>\n<li>Use with GatsbyJS: <a href="https://github.com/gera2ld/gatsby-remark-markmap">gatsby-remark-markmap</a></li>\n</ul>\n',a[1](n)},p:u,i:u,o:u,d:function(e){e&&d(n),a[1](null)}}}function y(a,n,e){var t;return h(g(f.mark((function a(){return f.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,b;case 2:window.Prism.highlightAllUnder(t);case 3:case"end":return a.stop()}}),a)})))),[t,function(a){k[a?"unshift":"push"]((function(){e(0,t=a)}))}]}var x=function(n){a(m,s);var e=v(m);function m(a){var n;return t(this,m),n=e.call(this),r(i(n),a,y,w,o,{}),n}return m}();export default x;
